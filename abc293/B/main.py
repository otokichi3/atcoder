#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):
    p = [False] * N
    for i in range(N):
        if not p[i]:
            p[A[i] - 1] = True
    ans = [i + 1 for i, x in enumerate(p) if x == False]
    print(len(ans))
    ans.sort()
    print(" ".join(map(str, ans)))
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word

    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)


if __name__ == "__main__":
    main()
